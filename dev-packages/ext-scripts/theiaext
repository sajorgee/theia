#!/usr/bin/env node
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
//@ts-check
const path = require('path');
const cp = require('child_process');

const extScriptsPck = require(path.resolve(__dirname, 'package.json'));

function getExtScript() {
    const commandIndex = process.argv.findIndex(arg => arg.endsWith('theiaext')) + 1;
    const args = process.argv.slice(commandIndex);
    if (!args[0]) {
        throw new Error('Please specify the script that runs with theiaext command.');
    }
    const script = 'ext:' + args[0];
    if (!(script in extScriptsPck.scripts)) {
        throw new Error('The ext script does not exist: ' + script);
    }
    return [extScriptsPck.scripts[script], ...args.slice(1, args.length)].join(' ');
}

function run(script) {
    return new Promise((resolve, reject) => {
        let env = process.env;
        /* Use the root .bin since deps .bin is not hoisted */
        env.PATH = process.cwd() + '/../../node_modules/.bin:' + process.env.PATH;
        const scriptProcess = cp.exec(script, {
            'env': env,
            cwd: process.cwd()
        });
        scriptProcess.stdout.pipe(process.stdout);
        scriptProcess.stderr.pipe(process.stderr);
        scriptProcess.on('error', reject);
        scriptProcess.on('close', resolve);
    });
}

(async () => {
    let exitCode = 0;
    try {
        const extScript = getExtScript();
        exitCode = await run(extScript);
    } catch (err) {
        console.log(`${err.name}: ${err.message}`);
        exitCode = 1;
    }
    process.exit(exitCode);
})();
